package csc2a.pta.model;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * Subclass of {@link Anomaly} for Anomalies that have been scanned.
 * 
 * ONLY EDIT THE VALIDATE METHOD BELOW!
 * 
 * @author Mr. Greaves
 *
 */
public class ScannedAnomaly extends Anomaly implements IProbable {


	/** This methods checks whether a string 
	 *  is of type unscanner anomaly or scanner
	 *  anomaly.
	 * 
	 *  @param line a string representing an anomaly.
	 *  @return boolean true or false.
	 */
	public static boolean validate(String line)
	{		
		boolean bool = false;

		Pattern pattern = Pattern.compile("[0-9]{3}@[0-9]{3}\\s[A-Z]*\\t[0-9]{3}\\t[A-Z][0-9]");

		Matcher match = pattern.matcher(line);

		if (match.matches()) {
			bool = true;
		}

		return bool;
	}
	
	/**
	 * DO NOT EDIT THIS FILE BELOW THIS LINE!
	 */

	private final String	classification;
	private final int			size;

	/**
	 * Create a new instance of ScannedAnomaly.
	 * 
	 * @param x
	 *          X position of ScannedAnomaly
	 * @param y
	 *          Y position of ScannedAnomaly
	 * @param type
	 *          Anomaly type of ScannedAnomaly
	 * @param size
	 *          Size of ScannedAnomaly
	 * @param classification
	 *          Text classification of ScannedAnomaly
	 */
	public ScannedAnomaly(int x, int y, EAnomalyType type, int size, String classification)
	{
		super(x, y, type);
		this.size = size;
		this.classification = classification;
	}

	/**
	 * Accept a visitor
	 */
	@Override
	public void accept(IProbeVisitor visitor) {
		visitor.probe(this);
	}

	/**
	 * Return a String representation of the current instance
	 */
	@Override
	public String toString()
	{
		System.out.println("Size: " + getSize());

		// X_LOCATION@Y_LOCATION ANOMALY_TYPE SCAN_SIZE SCAN_CLASS
		return String.format("%s\t%d\t%s", getType(),
				getSize(), getClassification());
	}

	/**
	 * Get the classification of the instance
	 * 
	 * @return The classification
	 */
	public String getClassification()
	{
		return classification;
	}

	/**
	 * Get the size of the instance
	 * 
	 * @return The size
	 */
	public int getSize()
	{
		return size;
	}

}
